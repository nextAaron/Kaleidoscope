cxx = g++
#cxx = /usr/local/Cellar/llvm/3.5.0_2/bin/clang++
builddir = build

flags = -pedantic -Wall -Wextra -ggdb3
#-Ofast -march=native -D NDEBUG
cxxflags = -std=c++14
ldflags = -flto
llvmcxxflags = -D __STDC_LIMIT_MACROS -D __STDC_CONSTANT_MACROS
llvmlibs = -l LLVMMCJIT -l LLVMRuntimeDyld -l LLVMInterpreter -l LLVMExecutionEngine -l LLVMX86Disassembler -l LLVMX86AsmParser -l LLVMX86CodeGen -l LLVMSelectionDAG -l LLVMAsmPrinter -l LLVMCodeGen -l LLVMScalarOpts -l LLVMInstCombine -l LLVMTransformUtils -l LLVMipa -l LLVMAnalysis -l LLVMTarget -l LLVMX86Desc -l LLVMObject -l LLVMMCParser -l LLVMBitReader -l LLVMCore -l LLVMX86Info -l LLVMX86AsmPrinter -l LLVMMC -l LLVMX86Utils -l LLVMSupport
llvmsystemlibs = -l z -l ffi -l ncurses -l psapi -l imagehlp

pool cxx_pool
  depth = 4

rule cxx
  deps = gcc
  depfile = $out.d
  command = $cxx -MMD -MF $depfile $cxxflags $in -c -o $out
  pool = cxx_pool

rule link
  command = $cxx $in -o $out $ldflags

build $builddir/toy.o: cxx toy.cpp
  cxxflags = $cxxflags $llvmcxxflags

build $builddir/toy.exe: link $builddir/toy.o
  ldflags = $ldflags $llvmlibs $llvmsystemlibs $llvmldflags

default $builddir/toy.exe
